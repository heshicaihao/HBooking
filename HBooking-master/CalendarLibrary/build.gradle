apply plugin: 'com.android.library'
apply plugin: 'checkstyle'

task checkstyle(type: Checkstyle) {
  configFile rootProject.file('checkstyle.xml')
  source 'src/main/java'
  ignoreFailures false
  showViolations true
  include '**/*.java'

  classpath = files()
}

afterEvaluate {
  if (project.tasks.findByName('check')) {
    check.dependsOn('checkstyle')
  }
}

android {
//  compileSdkVersion rootProject.ext.compileSdkVersion
  //  buildToolsVersion rootProject.ext.buildToolsVersion
  compileSdkVersion = 23
  buildToolsVersion = '23.0.3'



  defaultConfig {
//    minSdkVersion rootProject.ext.minSdkVersion
    minSdkVersion = 8
  }


  lintOptions {
    warning 'MissingTranslation'
    textReport true
    textOutput 'stdout'
  }
  buildToolsVersion '25.0.2'
}

dependencies {
//  testCompile deps.festandroid
//  testCompile deps.junit
//  testCompile deps.robolectric
//  testCompile deps.intellijannotations
}

//apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
//ext {
//  minSdkVersion = 8
//  targetSdkVersion = 23
//  compileSdkVersion = 23
//  buildToolsVersion = '23.0.0'
//  sourceCompatibilityVersion = JavaVersion.VERSION_1_7
//  targetCompatibilityVersion = JavaVersion.VERSION_1_7
//}
//
//ext.deps = [
//        // Test dependencies
//        junit      : 'junit:junit:4.10',
//        festandroid: 'com.squareup:fest-android:1.0.7',
//        robolectric: 'org.robolectric:robolectric:2.2',
//        intellijannotations: 'com.intellij:annotations:12.0'
//]

